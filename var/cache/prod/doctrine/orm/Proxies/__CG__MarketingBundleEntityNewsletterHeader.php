<?php

namespace Proxies\__CG__\MarketingBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class NewsletterHeader extends \MarketingBundle\Entity\NewsletterHeader implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'id', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'title', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textTop', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textIntro', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textDescription', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'picture', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'filePicture', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'link', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'updatedAt', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'newsletter', 'displayBanner'];
        }

        return ['__isInitialized__', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'id', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'title', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textTop', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textIntro', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'textDescription', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'picture', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'filePicture', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'link', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'updatedAt', '' . "\0" . 'MarketingBundle\\Entity\\NewsletterHeader' . "\0" . 'newsletter', 'displayBanner'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (NewsletterHeader $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function processBanner(\Symfony\Component\DependencyInjection\ContainerInterface $container)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processBanner', [$container]);

        return parent::processBanner($container);
    }

    /**
     * {@inheritDoc}
     */
    public function isUploadFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUploadFile', []);

        return parent::isUploadFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsletter($newsletter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsletter', [$newsletter]);

        return parent::setNewsletter($newsletter);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsletter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsletter', []);

        return parent::getNewsletter();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextTop($textTop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextTop', [$textTop]);

        return parent::setTextTop($textTop);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextTop', []);

        return parent::getTextTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextIntro($textIntro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextIntro', [$textIntro]);

        return parent::setTextIntro($textIntro);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextIntro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextIntro', []);

        return parent::getTextIntro();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextDescription($textDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextDescription', [$textDescription]);

        return parent::setTextDescription($textDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextDescription', []);

        return parent::getTextDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture($picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture', [$picture]);

        return parent::setPicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture', []);

        return parent::getPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink($link)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', [$link]);

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', []);

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilePicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilePicture', []);

        return parent::getFilePicture();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilePicture($filePicture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilePicture', [$filePicture]);

        return parent::setFilePicture($filePicture);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

}
